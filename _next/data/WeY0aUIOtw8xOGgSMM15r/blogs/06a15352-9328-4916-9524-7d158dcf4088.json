{"pageProps":{"data":{"category":null,"content":"本文主要介绍自己在使用v2ray进行反向代理过程中。安装请参考官网[安装](https://www.v2ray.com/chapter_00/install.html)，主要实现通过中间服务器访问家里电脑上运行的服务。\n\n\n\n#### 原理\n\n- 假设在主机 A 中有一个网页服务器，这台主机没有公网 IP，无法在公网上直接访问。另有一台主机 B，它可以由公网访问。现在我们需要把 B 作为入口，把流量从 B 转发到 A。\n\n- 在主机 A 中配置一个 V2Ray，称为`bridge`，在 B 中也配置一个 V2Ray，称为`portal`。\n\n- `bridge`会向`portal`主动建立连接，此连接的目标地址可以自行设定。`portal`会收到两种连接，一是由`bridge`发来的连接，二是公网用户发来的连接。`portal`会自动将两类连接合并。于是`bridge`就可以收到公网流量了。\n- `bridge`在收到公网流量之后，会将其原封不动地发给主机 A 中的网页服务器。当然，这一步需要路由的协作。\n- `bridge`会根据流量的大小进行动态的负载均衡\n\n\n\n也就是说你需要一台能访问公网的服务器，一台家里的电脑。\n\n\n\n##### 服务器配置\n\n```code\n{\n    \"log\": {\n        \"error\": \"/var/log/v2ray/error.log\",\n        \"loglevel\": \"info\",\n        \"access\": \"/var/log/v2ray/access.log\"\n    },\n    \"inbounds\": [\n        // 链接外网的入口\n        {\n            \"tag\": \"external\",\n            \"port\": 40080,   // 外网访问的端口\n            \"protocol\": \"dokodemo-door\",\n            \"settings\": {\n                \"address\": \"127.0.0.1\",\n                \"port\": 80,    // 访问的本地电脑的端口\n                \"network\": \"tcp\"\n            }\n        },\n        // 用于接受bridge的连接\n        {\n            \"port\": 1024,\n            \"tag\": \"interconn\",\n            \"protocol\": \"vmess\",\n            \"settings\": {\n                \"clients\": [\n                    {\n                        \"id\": \"27848739-7e62-4138-9fd3-098a63964b6b\"\n                    }\n                ]\n            }\n        }\n    ],\n    \"outbounds\": [\n        {\n            \"protocol\": \"freedom\",\n            \"settings\": {}\n        }\n    ],\n    \"routing\": {\n        \"rules\": [\n            {\n                \"type\": \"field\",\n                \"inboundTag\": [\n                    \"external\"\n                ],\n                \"outboundTag\": \"portal\"\n            },\n            {\n                \"type\": \"field\",\n                \"inboundTag\": [\n                    \"interconn\"\n                ],\n                \"outboundTag\": \"portal\"\n            }\n        ]\n    },\n    // 反向代理的配置\n    \"reverse\": {\n        \"portals\": [\n            {\n                \"tag\": \"portal\",\n                \"domain\": \"bridge.ablum.com\"\n            }\n        ]\n    }\n}\n```\n\n\n\n##### 客户端配置\n\n```code\n{\n  \"log\": {\n    \"error\": \"/var/log/v2ray/error.log\",\n    \"loglevel\": \"info\",\n    \"access\": \"/var/log/v2ray/access.log\"\n  },\n  \"inbounds\": [],\n  \"outbounds\": [\n    {\n      \"tag\": \"out\",\n      \"protocol\": \"freedom\",\n      \"settings\": {\n        \"redirect\": \"127.0.0.1:80\"\n      }\n    },\n    {\n      \"protocol\": \"vmess\",\n      \"settings\": {\n        \"vnext\": [\n          {\n            \"address\": \" 服务器ip\",\n            \"port\": 1024,\n            \"users\": [{ \"id\": \"27848739-7e62-4138-9fd3-098a63964b6b\" }]\n          }\n        ]\n      },\n      \"tag\": \"interconn\"\n    },\n    {\n      \"tag\": \"blockout\",\n      \"protocol\": \"blackhole\",\n      \"settings\": {\n        \"response\": {\n          \"type\": \"none\"\n        }\n      }\n    }\n  ],\n  \"dns\": {\n    \"servers\": [\"\"]\n  },\n  \"routing\": {\n    \"strategy\": \"rules\",\n    \"settings\": {\n      \"domainStrategy\": \"IPIfNonMatch\",\n      \"rules\": [\n        {\n          \"type\": \"field\",\n          \"inboundTag\": [\"bridge\"],\n          \"domain\": [\"full:bridge.ablum.com\"],\n          \"outboundTag\": \"interconn\"\n        },\n        {\n          \"type\": \"field\",\n          \"inboundTag\": [\"bridge\"],\n          \"outboundTag\": \"out\"\n        }\n      ]\n    }\n  },\n  \"transport\": {},\n  \"reverse\": {\n    \"bridges\": [\n      {\n        \"tag\": \"bridge\",\n        \"domain\": \"bridge.ablum.com\"  // 与服务器配置的domain相同，不用真实存在\n      }\n    ]\n  }\n}\n\n```\n\n\n\nPS: 官方先启动**bridge**，再启动**portal**，实测先启动**portal**也可以。\n","createTime":1653616647381,"creativeType":"original","description":"本文主要介绍自己在使用v2ray进行反向代理过程中。安装请参考官网[安装](https:www.v2ray.com/chapter_00/install.html)，主要实现通过中间服务器访问家里电脑上运行的服务。\n\n\n\n 原理\n\n- 假设在主机 A 中有一个网页服务器，这台主机没有公网 IP，无法在公网上直接访问。另有一台主机 B，它可以由公网访问。现在我们需要把 B 作为入口，把流","headerImg":"","id":"06a15352-9328-4916-9524-7d158dcf4088","isDeleted":false,"likeCount":0,"name":"v2ray反向代理","operator":{"avatar":"//file.vwood.xyz/2022/07/13/upload_xtola9p0z8ctzyg5g014tfmjkokb7ydq.jpg","description":"一个懒惰、躺平的程序员","github":"https://github.com/abelce","id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["v2ray","代理"],"updateTime":1658063900096,"viewCount":160},"id":"06a15352-9328-4916-9524-7d158dcf4088","latestArticleList":[{"id":"67eb1db1-28cf-4ae6-9263-5aea9cb8b55e","name":"css伪类:not用法","tags":[],"description":"","content":""},{"id":"38abab46-1f1d-47e0-9f3d-aeafdf41a0e7","name":"js 实现 LRU缓存","tags":[],"description":"","content":""},{"id":"02eea954-494c-4c35-8f80-d34e70f87807","name":"低代码文章收集","tags":[],"description":"","content":""},{"id":"f6ea6c70-76ba-40fa-9f5b-792afbf7fe8b","name":"记又拍云接入过程","tags":[],"description":"","content":""},{"id":"281b0b57-0e7e-4033-bcad-8b886535e127","name":"chrome文字定位与::target-text样式设置","tags":[],"description":"","content":""}]},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{},"commentStore":{},"noteStore":{},"askStore":{},"stypeStore":{}},"__N_SSG":true}