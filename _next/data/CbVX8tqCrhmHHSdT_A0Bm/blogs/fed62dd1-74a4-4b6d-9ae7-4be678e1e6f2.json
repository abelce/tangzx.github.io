{"pageProps":{"data":{"category":null,"content":"\n\n\n> 在公司构建用户个人站点的过程中使用使用到了模版`template`，在此总结一下\n\n\n\n### 一、为什么要使用静态页面\n\n 页面应用对于在站点SEO方面存在局限性，而用户又希望可以通过SEO来增加网站的权重，所以使用了静态页面\n\n\n\n### 二、解析过程\n\n用到的函数\n\n```golang\nfunc (t *Template) New(name string) *Template\n```\n\n用给定的名称name创建一个template，这个name在后面的`ParseFiles`里必须存在，不然会保存`panic: template: \"example\" is an incomplete or empty template`\n\n\n\n```golang\nfunc (t *Template) ParseFiles(filenames ...string) (*Template, error)\n```\n\n参数为一个或多个文件名，默认把一个文件作为主模版\n\n\n\n```golang\nfunc (t *Template) Execute(wr io.Writer, data interface{}) error\n```\n\n将给的数据应用到解析的模版上，如果报错，将停止执行，与`ExecuteTemplate`的区别在于， `ExecuteTemplate`可以通过第二个参数指定主模版\n\n\n\n```golang\nfunc (t *Template) Funcs(funcMap FuncMap) *Template\n```\n\n在模版中有时需要获取data中没有的数据、或者要经过特殊处理后的数据，FuncMap就可以使用起来的\n\n\n\n模版:\n\nheader.tpl\n\n```tpl\n{{define \"header\"}}\n<html lang=\"\">\n    <head>\n        <title>{{.Title}}</title>\n    </head>\n    <body>\n{{end}}\n```\n\n\n\nindex.tpl\n\n```tpl\n{{template \"header\" .}}\n<div>{{.Content}}</div>\n<div>name: {{get \"name\"}}</div>\n{{template \"footer\"}}\n```\n\n\n\nfooter.tpl\n\n```tpl\n{{define \"footer\"}}\n    </body>\n</html>\n{{end}}\n```\n\n在模版嵌套时，子模版需要指定相应的上下文才能正确的渲染`{{template \"header\" .}}`，这里通过`.`将所有数据传递到子模版\n\n\n\ngo部分代码如下：\n\n```golang\ntype RenderFactory struct{}\n\nfunc getValue(key string) string {\n\tswitch key {\n\tcase \"name\":\n\t\treturn \"abelce\"\n\tcase \"sex\":\n\t\treturn \"male\"\n\tdefault:\n\t\treturn \"\"\n\t}\n}\n\nfunc parseTemplate(tpl string) (*template.Template, error) {\n\n\theader := \"./template/header.tpl\"\n\tfooter := \"./template/footer.tpl\"\n\tfile := \"./template/\" + tpl + \".tpl\"\n\t// 需判断文件是否存在\n\n\tt := template.New(tpl + \".tpl\")\n\tt.Funcs(template.FuncMap{\"get\": getValue})\n\n\tt, err := t.ParseFiles(file, header, footer)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn t, nil\n}\n\nfunc (rf *RenderFactory) Render() error {\n\toutputFile, err := os.Create(\"/data/index.html\")\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tt, err := parseTemplate(\"index\")\n\tif err != nil {\n\t\treturn err\n\t}\n\n\ttmp := &Tmp{\n\t\tTitle:   \"go | template\",\n\t\tContent: \"hello world\",\n\t}\n\terr = t.Execute(outputFile, tmp)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n```\n\n\n\n完整代码[github](https://github.com/abelce/go-template)\n\n","createTime":1636124774866,"description":"\n\n\n在公司构建用户个人站点的过程中使用使用到了模版template，在此总结一下\n\n\n\n 一、为什么要使用静态页面\n\n 页面应用对于在站点SEO方面存在局限性，而用户又希望可以通过SEO来增加网站的权重，所以使用了静态页面\n\n\n\n 二、解析过程\n\n用到的函数\n\ngolang\nfunc (t *Template) New(name string) *Template\n","headerImg":"","id":"fed62dd1-74a4-4b6d-9ae7-4be678e1e6f2","isDeleted":false,"likeCount":0,"name":"golang模版解析","operator":{"avatar":"//file.vwood.xyz/2022/07/13/upload_xtola9p0z8ctzyg5g014tfmjkokb7ydq.jpg","description":"一个懒惰、躺平的程序员","github":"https://github.com/abelce","id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["template"],"updateTime":1650613834346,"viewCount":116},"id":"fed62dd1-74a4-4b6d-9ae7-4be678e1e6f2","latestArticleList":[{"id":"f6ea6c70-76ba-40fa-9f5b-792afbf7fe8b","name":"记又拍云接入过程","tags":[],"description":"","content":""},{"id":"281b0b57-0e7e-4033-bcad-8b886535e127","name":"chrome文字定位与::target-text样式设置","tags":[],"description":"","content":""},{"id":"3b529a3e-13b9-4553-a454-13ce172dfedc","name":"bind、call、apply实现","tags":[],"description":"","content":""},{"id":"0257e379-878d-465a-b88a-03996f336035","name":"手写事件监听模块","tags":[],"description":"","content":""},{"id":"020be9da-928a-40c9-b25a-fda6e1c182b1","name":"css实现三角形","tags":[],"description":"","content":""}]},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{},"commentStore":{},"noteStore":{},"askStore":{},"stypeStore":{}},"__N_SSG":true}