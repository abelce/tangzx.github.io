{"pageProps":{"data":{"category":null,"content":"经常在脚本编写中需要使用到模版tempalte，用来静态生成文件、代码，总结如下。\n\n### template中define使用\n\n在使用编写template时可以使用{{define}}{{end}}来命名模版，在模版引入时直接使用命名即可，如下：\nheader.tpl\n\n```tpl\n{{define header}}\n\theader demo\n{{end}}\n```\n\narticle.tpl\n\n```tpl\n{{define article}}\n\t{{template header .}}\n{{end}}\n```\n\n然后在golang中使用**template.ParseFiles(filenames ...string)**解析所有的模版：\n\n```go\nt, err := template.ParseFiles(\"/article.tpl\", \"header.tpl\")\nif err != nil {\n    panic(err)\n}\nvar buf bytes.Buffer\n// 这里的article指定解析的入口模版，当在解析和输出时如果发生错误，将停止，但这是可能buf已经被写入了部分数据，需要注意。  \nerr = t.ExecuteTemplate(&buf, \"article\", data)\nif err != nil {\n    panic(err)\n}\nreturn buf.String()    \n```\n\n### 条件判断\n\n1. if else\n\n```golang\nstruct Person {\n\tAge int\n    Sex string   \n}\ntom := Person{\n\tAge: 20,\n    Sex: \"男\",    \n}\n// xxx\nt.Execute(&buf, tom)\n```\n\n```tpl\n{{if gt .Age 20}}\n  rather than 20\n{{else if eq .Age 20}}\n  equal 20\n{{else}}\n  less than 20\n{{end}}\n```\n\n上面的代码中表示大于、等于，在条件判断中需要使用**end**作为结尾的标识符。\n\n2. 内置函数\n   eq 等于\n\n```tpl\n{{if eq val1 val2}}{{end}}\nne 不等于\n{{if ne val1 val2}}{{end}}\ngt 大于\n{{if gt val1 val2}}{{end}}\n```\n\nlt 大于\n{{if lt val1 val2}}{{end}}\n\n```\nge 大于等于\n{{if ge val1 val2}}{{end}}\n```\n\nle 大于等于\n{{if le val1 val2}}{{end}}\n\n```\nand 与\n{{if and .cond1 .cond2}}{{end}}\nor 或\n{{if or .cond1 .cond2}}{{end}}\nnot 非\n{{if not .cond1 }}{{end}}\n\n\n年龄大于20的男性\n```tpl\n{{if and (gt .Age 20) (eq .Sex \"男\")}}\n{{end}\n```\n\n年龄小于20，或者不是男性\n\n```tpl\n{{if or (lt .Age 20) (ne .Sex \"男\")}}\n{{end}\n```\n\n### template.FuncMap\n\n模版中提供的内置函数无法满足业务场景，要添加自定义函数，提供了**template.FuncMap**y用来注册自定义方法\n\n```go\n\tfunc lowerCase(str string) string {\n\t\treturn xxx;\n\t}\n \tfunc1 := template.FuncMap{\"lowerCase\": lowerCase}\n\tt.Funcs(func1)\n```\n\n上面注册了一个将名称转为小写的方法lowerCase，在模版中使用如下\n\n```tpl\n\t{{lowerCase .Name}}\n```\n\n有多个参数的话直接在后面追家即可\n\n### 模版读取\n\n经常会将模版写在单独的文件中，就需要读取文件，可以使用**path/filepath**来获取绝对路径\n\n```go\nfile, err := filepath.Abs(tplPath)\nif err != nil {\n\tpanic(err)\n}\n```\n","createTime":1640183965789,"creativeType":"original","description":"经常在脚本编写中需要使用到模版tempalte，用来静态生成文件、代码，总结如下。\n\n template中define使用\n\n在使用编写template时可以使用{{define}}{{end}}来命名模版，在模版引入时直接使用命名即可，如下：\nheader.tpl\n\ntpl\n{{define header}}\n\theader demo\n{{end}}\n\n\narticle.tpl","headerImg":"","id":"dc34891b-d0b9-4d3b-8183-aff569cf3269","isDeleted":false,"likeCount":0,"name":"golang tempalte使用","operator":{"avatar":"//file.vwood.xyz/2022/07/13/upload_xtola9p0z8ctzyg5g014tfmjkokb7ydq.jpg","description":"一个懒惰、躺平的程序员","github":"https://github.com/abelce","id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":[],"updateTime":1658063991343,"viewCount":219},"id":"dc34891b-d0b9-4d3b-8183-aff569cf3269","latestArticleList":[{"id":"67eb1db1-28cf-4ae6-9263-5aea9cb8b55e","name":"css伪类:not用法","tags":[],"description":"","content":""},{"id":"38abab46-1f1d-47e0-9f3d-aeafdf41a0e7","name":"js 实现 LRU缓存","tags":[],"description":"","content":""},{"id":"02eea954-494c-4c35-8f80-d34e70f87807","name":"低代码文章收集","tags":[],"description":"","content":""},{"id":"f6ea6c70-76ba-40fa-9f5b-792afbf7fe8b","name":"记又拍云接入过程","tags":[],"description":"","content":""},{"id":"281b0b57-0e7e-4033-bcad-8b886535e127","name":"chrome文字定位与::target-text样式设置","tags":[],"description":"","content":""}]},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{},"commentStore":{},"noteStore":{},"askStore":{},"stypeStore":{}},"__N_SSG":true}