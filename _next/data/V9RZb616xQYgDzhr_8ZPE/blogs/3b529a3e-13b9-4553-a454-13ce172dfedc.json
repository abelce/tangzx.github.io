{"pageProps":{"data":{"category":null,"content":"bind的用法\n1、生成新的函数\n2、若生成的新函数作为构造函数，那么根传入的对象没有任何关系\n3、可以作为偏函数使用\n\nbind的js实现\n```code\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function(that) {\n        if (typeof this === 'function') {\n            throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable')\n        }\n    \n        var args = Array.prototype.slice.call(arguments,1);\n        var fToBind = this;\n        var fNop = function(){};\n\n        // 返回的Fbind作为new的构造函数时，生成的新对象作为this传入Fbind,新对象的__proto__就是fNop的实例\n        var Fbind = function() {\n            args = args.concat(Array.prototype.slice.call(arguments));\n            return fToBind.apply(this instanceof Fbind ? this : that, args);\n        }\n        \n        // 维持原型链\n        if (this.prototype) {\n            fNop.prototype = this.prototype;\n        }\n        Fbind.prototype = new fNop();\n    \n        return Fbind;\n    }\n}\n```\n\ncall实现\n\n```code\nFunction.prototype.call = function(that) {\n    if (typeof this !== 'function') {\n        throw new TypeError('Function.prototype.call-----is not a function');\n    }\n    var args = [...arguments].slice(1);\n    that.fn = this;\n    \n    var result = that.fn(...args);\n    Reflect.deleteProperty(that, 'fn');\n    return result;\n}\n```\n\napply实现\n\n```code\nFunction.proptotype.apply = function() {\n    if (typeof this !== 'function') {\n        throw new TypeError('Function.prototype.apply-----is not a function');\n    }\n    that.fn = this;\n    \n    var result = \n    arguments[1]\n    ? that.fn(...arguments[1])\n    : that.fn();\n\n    Reflect.deleteProperty(that, 'fn');\n    return result;\n}\n```","createTime":1656914539482,"description":"bind的用法\n1、生成新的函数\n2、若生成的新函数作为构造函数，那么根传入的对象没有任何关系\n3、可以作为偏函数使用\n\nbind的js实现\ncode\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function(that) {\n        if (typeof this === 'function') {\n","headerImg":"","id":"3b529a3e-13b9-4553-a454-13ce172dfedc","isDeleted":false,"likeCount":0,"name":"bind、call、apply实现","operator":{"avatar":"//file.vwood.xyz/2022/07/13/upload_xtola9p0z8ctzyg5g014tfmjkokb7ydq.jpg","description":"一个懒惰、躺平的程序员","github":"https://github.com/abelce","id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["bing","call","apply"],"updateTime":1656914539482,"viewCount":84},"id":"3b529a3e-13b9-4553-a454-13ce172dfedc","latestArticleList":[{"id":"67eb1db1-28cf-4ae6-9263-5aea9cb8b55e","name":"css伪类:not用法","tags":[],"description":"","content":""},{"id":"38abab46-1f1d-47e0-9f3d-aeafdf41a0e7","name":"js 实现 LRU缓存","tags":[],"description":"","content":""},{"id":"02eea954-494c-4c35-8f80-d34e70f87807","name":"低代码文章收集","tags":[],"description":"","content":""},{"id":"f6ea6c70-76ba-40fa-9f5b-792afbf7fe8b","name":"记又拍云接入过程","tags":[],"description":"","content":""},{"id":"281b0b57-0e7e-4033-bcad-8b886535e127","name":"chrome文字定位与::target-text样式设置","tags":[],"description":"","content":""}]},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{},"commentStore":{},"noteStore":{},"askStore":{},"stypeStore":{}},"__N_SSG":true}