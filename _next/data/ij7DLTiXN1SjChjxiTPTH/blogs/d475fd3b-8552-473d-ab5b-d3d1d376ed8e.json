{"pageProps":{"data":{"category":null,"content":"> 快速排序就是在数组中选择一个数temp作为基准，每次排完之后比temp大的在其右边，比temp小的在其左边。\n\n有如下数组 A = [3, 6, 8, 2, 7, 5];\n\n1、 首先从右向左移动\n\n![](https://file.vwood.xyz/2022/07/13/upload_0v7deh9rhe1wy1u6qxg0eymkx34l5fqm.png)\n\n2、当右指针移动到2的时候，2比3小，停止移动\n\n![](https://file.vwood.xyz/2022/07/13/upload_igme7lhhpxoaw5zvcjqq2hym9gqqrcv9.png)\n\n3、从左往右移动左指针，到6时，6比3大，停止移动\n\n![](https://file.vwood.xyz/2022/07/13/upload_mkfn0k4h1cxna8c8s44abrqbj0pbuaa3.png)\n\n4、交换数据，交换6和2的位置\n\n![](https://img-blog.csdnimg.cn/img_convert/ddce6ff7ddfe59031e27f0218773c899.png)\n\n5、再次把右指针从右往左移动，到2时，因为2比3小，停止移动，此时左指针右指针相遇，本次循环结束\n\n![](https://img-blog.csdnimg.cn/img_convert/fce678fa73da6c26c507f1e27a539f57.png)\n\n6、 交换3(temp)与2的位置，本次排序后的顺序如下\n\n![](https://img-blog.csdnimg.cn/img_convert/45d7a56307e1662c473e4895bb8a28ee.png)\n\n\n\n以上是经历过一次循环排序的结构，3的左边只有2， 右边8、6、7、5均比3大，再把左右两边的数据进行排序，依次递归下去。\n\n\n\n下面是代码\n\n```js\nfunction QuickSort(arr, begin, end) {\n    if (begin >= end) {\n        return;\n    }\n\n     let l = begin;\n     let r = end;\n\n     let flag = arr[begin];\n\n     while( l < r) {\n         while(arr[r] >= flag && r > l) {\n            r--;\n         }\n\n         while(arr[l] <= flag && l < r) {\n            l++;\n         }\n\n         [arr[l], arr[r]] = [arr[r], arr[l]];\n     }\n     [arr[l], arr[begin]] = [arr[begin], arr[l]];\n     QuickSort(arr, begin, l - 1);\n     QuickSort(arr, l + 1, end);\n}\n\nvar  a = [3, 6, 8, 2, 7,5];\nQuickSort(a, 0, a.length - 1);\nconsole.log(a);\n```\n\n\n\n","createTime":1638107910458,"description":"快速排序就是在数组中选择一个数temp作为基准，每次排完之后比temp大的在其右边，比temp小的在其左边。\n\n有如下数组 A = [3, 6, 8, 2, 7, 5];\n\n1、 首先从右向左移动\n\n![](https:file.vwood.xyz/2022/07/13/upload_0v7deh9rhe1wy1u6qxg0eymkx34l5fqm.png)\n\n2、当右指针移动到2的时候，","headerImg":"","id":"d475fd3b-8552-473d-ab5b-d3d1d376ed8e","isDeleted":false,"likeCount":0,"name":"快速排序","operator":{"avatar":"//file.vwood.xyz/2022/07/13/upload_xtola9p0z8ctzyg5g014tfmjkokb7ydq.jpg","description":"一个懒惰、躺平的程序员","github":"https://github.com/abelce","id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":["js","快速排序"],"updateTime":1657723570725,"viewCount":30},"id":"d475fd3b-8552-473d-ab5b-d3d1d376ed8e","latestArticleList":[{"id":"38abab46-1f1d-47e0-9f3d-aeafdf41a0e7","name":"js 实现 LRU缓存","tags":[],"description":"","content":""},{"id":"02eea954-494c-4c35-8f80-d34e70f87807","name":"低代码文章收集","tags":[],"description":"","content":""},{"id":"f6ea6c70-76ba-40fa-9f5b-792afbf7fe8b","name":"记又拍云接入过程","tags":[],"description":"","content":""},{"id":"281b0b57-0e7e-4033-bcad-8b886535e127","name":"chrome文字定位与::target-text样式设置","tags":[],"description":"","content":""},{"id":"3b529a3e-13b9-4553-a454-13ce172dfedc","name":"bind、call、apply实现","tags":[],"description":"","content":""}]},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{},"commentStore":{},"noteStore":{},"askStore":{},"stypeStore":{}},"__N_SSG":true}