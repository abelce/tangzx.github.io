{"pageProps":{"data":{"category":null,"content":"\n以前用disqus作为评论，由于墙的原因导致无法访问，就一直没有加上新的评论系统，国内的评论系统有些已经关掉了，也无法使用，所以就想自己写一个简单的评论系统，只是实现了最基本的功能，还有大量的工作没有做。先整理成如下笔记。\n\n## 一、设计\n\n+ 前端\n\n  + 前端只需引入一个js文件就直接可以使用，类似**disqus**\n  + 一个用户多个站点的评论分别保存，不互相干扰\n  + 评论只有两级，避免嵌套层级太多导致样式问题\n  + 采用github登陆（以后添加更多登陆方式）\n  + 技术栈: javascript + scss + webpack，尽量减少第三包的引入，加快加载速度\n\n+ 后端\n\n  + 后端采用微服务的方式，认证、用户、评论模块作为单独的系统，通过gateway来进行接口的转发和权限验证。\n  + 技术栈：golang + postgres + docker\n\n  \n\n## 二、开发\n\n###后端\n\n#### 数据结构\n\n站点数据结构\n\n![](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4udndvb2QueHl6L1dYMjAxOTEyMTktMjIxNDA0QDJ4LnBuZw?x-oss-process=image/format,png)\n\n+ ID: 数据唯一标识\n+ OperatorID：用户id\n+ domain：站点域名，比如abc.com\n\n\n\n评论数据结构\n\n![](https://file.vwood.xyz/2022/07/11/upload_htena83o05v7qg235cp0ma4js61uj272.png)\n\n+ FromID: 评论者用户id （必须）\n+ ToID： 被评论者用户id\n+ Content:  内容 （必须）\n+ ParentID：父级评论id\n+ Url： 评论对应的页面url，此处删除了http/https，比如: **abc.com?id=xxx**（必须）\n+ WebsiteID: 站点id（必须）\n+ ReplyID: 回复评论的id\n\n\n\n返回结构\n\n![](https://file.vwood.xyz/2022/07/11/upload_oxuoxabfhcm39csfihsmyvm0yyplv7i8.png)\n\n**FromName**、**FromAvatar**、**ToName**、**ToAvatar**分别代表对应用户的昵称和头像，**Children**代表子评论列表\n\n\n\n 后端流程\n\n1. 注册站点拿到站点id\n2. 在创建评论时首先判断前端传过来的websiteID(站点id) 和 domain(域名)能否找站点的数据，能则创建评论，否则返回错误信息。\n3. 评论成功后会进行邮件通知\n\n\n\n### 前端\n\n先上一个效果图：\n\n![](https://file.vwood.xyz/2022/07/11/upload_amtrd7zgydul55uc6pjexaj19i6naxka.png)\n\n\n\n在站点加上如下代码\n\n```\n<div id=\"vcomment-go\"></div>\n<script src=\"//comment.vwood.xyz/vcomment.js?u_id=xxxxxxxxxxxxxxxxxxxxxxxxxx\"></script>\n```\n\n代码执行后会将**u_id**的数据以及页面的url设置到iframe的src数据中，iframe就可以拿到评论了。\n\n发布评论时需要先登陆，所以接入了**github**，具体的接入方式看官网。\n\n\n\nPS: 由于采用**iframe**来展示评论，避免与网站的样式产生冲突，注意由于iframe的高度不会与内容的高度自适应，所以采用了**<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage\" target=\"_blank\">postMessage</a>**来通知父级窗口设置iframe高度。\n\n\n\n## 总结\n\n本次只是做了评论系统的一点点功能，还有很多需要添加，比如：数据缓存、前端脚本注入、评论敏感字过滤等等，以及后台关系系统。\n\n\n\n[demo地址](https://demo.vwood.xyz/)\n\n\n\n","createTime":1638108132937,"description":"\n以前用disqus作为评论，由于墙的原因导致无法访问，就一直没有加上新的评论系统，国内的评论系统有些已经关掉了，也无法使用，所以就想自己写一个简单的评论系统，只是实现了最基本的功能，还有大量的工作没有做。先整理成如下笔记。\n\n 一、设计\n\n+ 前端\n\n  + 前端只需引入一个js文件就直接可以使用，类似disqus\n  + 一个用户多个站点的评论分别保存，不互相干扰\n  + 评论只有","headerImg":"","id":"fbe0f089-a2dd-49d5-acad-d3cdd8e35aae","isDeleted":false,"likeCount":0,"name":"记一次评论系统开发过程","operator":{"avatar":"//file.vwood.xyz/2022/07/13/upload_xtola9p0z8ctzyg5g014tfmjkokb7ydq.jpg","description":"一个懒惰、躺平的程序员","github":"https://github.com/abelce","id":"96f16846-31f2-489c-9af0-d4ca13e836e4","name":"文钦"},"operatorID":"96f16846-31f2-489c-9af0-d4ca13e836e4","tags":[],"updateTime":1657552329859,"viewCount":132},"id":"fbe0f089-a2dd-49d5-acad-d3cdd8e35aae","latestArticleList":[{"id":"38abab46-1f1d-47e0-9f3d-aeafdf41a0e7","name":"js 实现 LRU缓存","tags":[],"description":"","content":""},{"id":"02eea954-494c-4c35-8f80-d34e70f87807","name":"低代码文章收集","tags":[],"description":"","content":""},{"id":"f6ea6c70-76ba-40fa-9f5b-792afbf7fe8b","name":"记又拍云接入过程","tags":[],"description":"","content":""},{"id":"281b0b57-0e7e-4033-bcad-8b886535e127","name":"chrome文字定位与::target-text样式设置","tags":[],"description":"","content":""},{"id":"3b529a3e-13b9-4553-a454-13ce172dfedc","name":"bind、call、apply实现","tags":[],"description":"","content":""}]},"initialMobxState":{"userStore":{"currentUser":null,"users":[],"token":"","qiniuToken":"","userCount":0,"productCount":0,"commentCount":0,"settingType":"products"},"productStore":{},"commentStore":{},"noteStore":{},"askStore":{},"stypeStore":{}},"__N_SSG":true}